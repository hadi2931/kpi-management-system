$(document).ready(function() { // Using jQuery for Bootstrap components and simplicity here

    // Sample KPI Data (In a real app, this would come from an API)
    const kpis = [
        {
            id: 1,
            name: "Customer Satisfaction Score (CSAT)",
            owner: "Support Team",
            department: "Customer Support",
            target: "90%",
            targetType: "Percentage",
            currentValue: "92%",
            status: "Achieved",
            statusColor: "success",
            lastUpdated: "2024-07-25",
            description: "Measures overall customer satisfaction with our products/services.",
            calculationMethod: "Average of survey responses (1-5 scale, converted to %)",
            frequency: "Monthly",
            dataSource: "SurveyMonkey, Internal DB",
            thresholds: { good: ">= 90%", warning: "80-89%", bad: "< 80%" }
        },
        {
            id: 2,
            name: "Monthly Recurring Revenue (MRR)",
            owner: "Alex Johnson",
            department: "Sales",
            target: "$50,000",
            targetType: "Currency",
            currentValue: "$45,000",
            status: "Off-Track",
            statusColor: "warning",
            lastUpdated: "2024-07-28",
            description: "Total predictable revenue generated by active subscriptions in a month.",
            calculationMethod: "Sum of all active subscription fees per month.",
            frequency: "Monthly",
            dataSource: "Billing System (Stripe)",
            thresholds: { good: ">= $50,000", warning: "$40,000-$49,999", bad: "< $40,000" }
        },
        {
            id: 3,
            name: "Employee Churn Rate",
            owner: "Sarah Lee",
            department: "Human Resources",
            target: "< 5%",
            targetType: "Percentage",
            currentValue: "6%",
            status: "Off-Track",
            statusColor: "warning",
            lastUpdated: "2024-07-20",
            description: "Rate at which employees leave the company.",
            calculationMethod: "(Number of employees who left / Average number of employees) * 100",
            frequency: "Quarterly",
            dataSource: "HRIS",
            thresholds: { good: "< 5%", warning: "5-7%", bad: "> 7%" }
        },
        {
            id: 4,
            name: "Website Conversion Rate",
            owner: "Marketing Team",
            department: "Marketing",
            target: "3%",
            targetType: "Percentage",
            currentValue: "2.8%",
            status: "Active",
            statusColor: "info",
            lastUpdated: "2024-07-29",
            description: "Percentage of website visitors who complete a desired action (e.g., sign up).",
            calculationMethod: "(Number of conversions / Total website visitors) * 100",
            frequency: "Weekly",
            dataSource: "Google Analytics",
            thresholds: { good: ">= 3%", warning: "2-2.9%", bad: "< 2%" }
        }
    ];

    const kpiTableBody = $('#kpiTableBody');
    const kpiDetailsBody = $('#kpiDetailsBody');
    const noKpiMessage = $('#noKpiMessage');
    let currentEditingKpiId = null;

    function renderKpiTable(filteredKpis) {
        kpiTableBody.empty(); // Clear existing rows
        if (filteredKpis.length === 0) {
            noKpiMessage.show();
            return;
        }
        noKpiMessage.hide();

        filteredKpis.forEach(kpi => {
            const row = `
                <tr>
                    <td>${kpi.name}</td>
                    <td>${kpi.owner}</td>
                    <td>${kpi.target}</td>
                    <td><span class="badge badge-${kpi.statusColor}">${kpi.currentValue}</span></td>
                    <td><span class="badge badge-pill badge-${kpi.statusColor}">${kpi.status}</span></td>
                    <td>${kpi.lastUpdated}</td>
                    <td>
                        <button class="btn btn-sm btn-info view-details-btn" data-kpi-id="${kpi.id}">
                            <i class="fas fa-eye"></i> View
                        </button>
                        <a href="kpi_manager_edit.html?id=${kpi.id}" class="btn btn-sm btn-outline-secondary">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                    </td>
                </tr>
            `;
            kpiTableBody.append(row);
        });
    }

    // Initial render
    renderKpiTable(kpis); // Initially render all KPIs, could be dynamically loaded

    // Event listener for View Details buttons
    kpiTableBody.on('click', '.view-details-btn', function() {
        const kpiId = $(this).data('kpi-id');
        const kpi = kpis.find(k => k.id === kpiId);
        currentEditingKpiId = kpiId;

        if (kpi) {
            const detailsHtml = `
                <h6>General Information</h6>
                <div class="row">
                    <div class="col-md-6"><div class="data-point"><span class="detail-label">KPI Name:</span> <span class="detail-value">${kpi.name}</span></div></div>
                    <div class="col-md-6"><div class="data-point"><span class="detail-label">Owner:</span> <span class="detail-value">${kpi.owner}</span></div></div>
                    <div class="col-md-6"><div class="data-point"><span class="detail-label">Department:</span> <span class="detail-value">${kpi.department}</span></div></div>
                    <div class="col-md-6"><div class="data-point"><span class="detail-label">Status:</span> <span class="badge badge-${kpi.statusColor}">${kpi.status}</span></div></div>
                </div>

                <h6>Description</h6>
                <p>${kpi.description}</p>

                <h6>Target & Performance</h6>
                <div class="row">
                    <div class="col-md-4"><div class="data-point"><span class="detail-label">Target (${kpi.targetType}):</span> <span class="detail-value">${kpi.target}</span></div></div>
                    <div class="col-md-4"><div class="data-point"><span class="detail-label">Current Value:</span> <span class="detail-value">${kpi.currentValue}</span></div></div>
                    <div class="col-md-4"><div class="data-point"><span class="detail-label">Last Updated:</span> <span class="detail-value">${kpi.lastUpdated}</span></div></div>
                </div>


                <h6>Definition & Source</h6>
                 <div class="row">
                    <div class="col-md-6"><div class="data-point"><span class="detail-label">Calculation Method:</span> <span class="detail-value">${kpi.calculationMethod}</span></div></div>
                    <div class="col-md-6"><div class="data-point"><span class="detail-label">Update Frequency:</span> <span class="detail-value">${kpi.frequency}</span></div></div>
                    <div class="col-md-12"><div class="data-point"><span class="detail-label">Data Source(s):</span> <span class="detail-value">${kpi.dataSource}</span></div></div>
                </div>


                <h6>Thresholds</h6>
                <div class="row">
                    <div class="col-md-4"><div class="data-point"><span class="detail-label">Good:</span> <span class="detail-value">${kpi.thresholds.good}</span></div></div>
                    <div class="col-md-4"><div class="data-point"><span class="detail-label">Warning:</span> <span class="detail-value">${kpi.thresholds.warning}</span></div></div>
                    <div class="col-md-4"><div class="data-point"><span class="detail-label">Bad/Critical:</span> <span class="detail-value">${kpi.thresholds.bad}</span></div></div>
                </div>
            `;
            kpiDetailsBody.html(detailsHtml);
            $('#kpiDetailsModal').modal('show');
        }
    });

    // Edit button in modal
    $('#editKpiFromModalBtn').on('click', function() {
        if (currentEditingKpiId) {
            window.location.href = `kpi_manager_edit.html?id=${currentEditingKpiId}`;
        }
    });

    // Search and Filter functionality
    $('#kpiSearchInput, #kpiFilterStatus').on('keyup change', function() {
        const searchTerm = $('#kpiSearchInput').val().toLowerCase();
        const filterStatus = $('#kpiFilterStatus').val();

        const filteredKpis = kpis.filter(kpi => {
            const matchesSearch = kpi.name.toLowerCase().includes(searchTerm) ||
                                  kpi.owner.toLowerCase().includes(searchTerm) ||
                                  kpi.department.toLowerCase().includes(searchTerm);
            const matchesStatus = filterStatus ? kpi.status === filterStatus : true;
            return matchesSearch && matchesStatus;
        });
        renderKpiTable(filteredKpis);
    });

    // Initial render with sample data (replace with actual API call)
    if (kpis && kpis.length > 0) {
        // Sample data already loaded, render it
        // If you were fetching, you'd call renderKpiTable(data_from_api) here
    } else {
        // In a real app, you might fetch KPIs here
        // e.g., fetch('/api/kpis').then(res => res.json()).then(data => renderKpiTable(data));
        kpiTableBody.html('<tr><td colspan="7" class="text-center">Loading KPIs or No KPIs defined yet.</td></tr>');
        noKpiMessage.show().text("No KPIs defined yet. Click 'Add New KPI' to get started.");
    }
});